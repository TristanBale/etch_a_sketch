//step 1: make a 16 x 16 grid of divs
//make a 2D array of 16 by 16 places
const mainContainer = document.querySelector('.mainContainer');

const btn = document.querySelector('.btn');

let arrayOfDivs = [];
let userInput = '';

btn.addEventListener('click', () => {
    userInput = prompt('Please choose how many squares per side for the grid: ');
    userInput = +userInput;
    if (typeof userInput === 'number') {
        arrayOfDivs = create2D_Array(userInput,userInput);
        console.log(arrayOfDivs);
        create_Divs(arrayOfDivs);
    }
    else {
        alert('Please key in numbers only');
    }
});

//console.log(`user input is ${userInput}`);


function create2D_Array(rows, columns) {
    let array = [];
    let value = 0;
    for (let i = 0; i < rows; ++i) {
        array[i] = [];
        for (let j = 0; j < columns; ++j) {
            array[i][j] = value++;
        }
    } 
    return array;
 }

//arrayOfDivs = create2D_Array(userInput, userInput);

function create_Divs(array) {
    mainContainer.innerHTML = ''; //this is done here and not the other functions as the rest handles creating the arrays. only create_divs actually appends and edit the HTML.

    for (const subArray of array) {
        const innerDivContainer = document.createElement('div');
        innerDivContainer.classList.add('innerDivContainer');
        mainContainer.appendChild(innerDivContainer);
        for (const element of subArray) {
            const gridDiv = document.createElement('div');
            gridDiv.classList.add('gridDiv');
            gridDiv.textContent = '';
            innerDivContainer.appendChild(gridDiv);
        }
    }

    const gridDivNodeList = document.querySelectorAll('.gridDiv');


    for (let i = 0; i < gridDivNodeList.length; i++) {
        gridDivNodeList[i].addEventListener('mouseover', () => {
            gridDivNodeList[i].setAttribute('style', 'background-color: black;');
        });
        gridDivNodeList[i].addEventListener('mouseout', () => {
            setTimeout( () => 
            gridDivNodeList[i].setAttribute('style', 'background-color: lavender;'), 300);
        });      
    }
}





<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Etch-a-Sketch</title>
    <script src="./js-file_rainbow_and_eraser.js" defer></script>
    <link rel="stylesheet" href="./css-file.css">
</head>

<body>
    <div class="window">
        <div class="imageContainer"> 
            <img src="./reo.png" alt="reo thumbs up" height="auto" width="500">   
            <div class="topDisplayHolder">
                <div class="modeDisplayer"><b>Current mode:</b> normal</div>
                <div class="trailDisplayer"><b>Trail mode:</b> vanish</div>
            </div>
        </div>
        <div class="mainBodyContainer">
            <div class="buttonContainer">
                <button class="btn">Press to change number of grids</button>
            </div>

            <!--
            <div id="sizeValue" class="size-value">16 x 16</div>
            <input id="sizeSlider" type="range" value="16" min="1" max="64">
            -->

            <div class="mainContainer"> this is where the grid is </div>
            <div class="modeSelection">
                <button class="normalBtn">Normal</button>
                <button class="rainbowBtn">Rainbow mode</button>
                <button class="eraserBtn">Eraser</button>
                <button class="vanishBtn">Vanish mode</button>
                <button class="permanentBtn">Permanent mode</button>
                <button class="clearBtn">Clear</button>
            </div>
          
            
        </div> 
        <div class="imageContainer"> 
            <img src="./reo_pat-removebg-preview.png" alt="reo pat" height="auto" width="420">
            <!-- <div id="fillerText_to_position_reo">filler</div> -->
            <input id="colorPicker" type="color" value="#333333" />
            <div class="colorDisplayer"><b>Colour:</b> #333333</div>
        </div>
    </div>
</body>
</html>








